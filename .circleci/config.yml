version: 2.1

orbs:
  win: circleci/windows@1.0.0

workflows:
  workflow:
    jobs:
      - go-test:
          name: Go 1.14
          docker-image: cimg/go:1.14
          with-coverage: true
          run-lint: true
      - go-test:
          name: Go 1.13
          docker-image: cimg/go:1.13
      - go-test-windows:
          name: Windows
      - benchmarks

jobs:
  go-test:
    parameters:
      docker-image:
        type: string
      run-lint:
        type: boolean
        default: false
      with-coverage:
        type: boolean
        default: false
  
    docker:
      - image: <<parameters.docker-image>>
        environment:
          CIRCLE_TEST_REPORTS: /tmp/circle-reports
          CIRCLE_ARTIFACTS: /tmp/circle-artifacts
          COMMON_GO_PACKAGES: >
            github.com/golang/dep/cmd/dep
            github.com/jstemmer/go-junit-report
      - image: redis
      - image: consul
      - image: amazon/dynamodb-local

    working_directory: ~/go/src/gopkg.in/launchdarkly/go-server-sdk.v5

    steps:
      - checkout
      - run: go get -u $COMMON_GO_PACKAGES
      - when:
          condition: <<parameters.run-lint>>
          steps:
            - run: make lint
      # - run: dep ensure -dry-run  # we're currently using private repos for some of our dependencies, so this won't work in CI
      - run: go build ./...

      - run:
          name: Prepare tests
          command: |
            mkdir -p $CIRCLE_TEST_REPORTS
            mkdir -p $CIRCLE_ARTIFACTS

      - run:
          name: Run tests
          command: make test | tee $CIRCLE_ARTIFACTS/report.txt
    
      - when:
          condition: <<parameters.with-coverage>>
          steps:
            - run:
                name: Make coverage report
                command: |
                  make test-coverage || true
            - run:
                name: Store coverage results
                command: cp build/coverage* /tmp/circle-artifacts
                when: always
    
      - run:
          name: Process test results
          command: go-junit-report < $CIRCLE_ARTIFACTS/report.txt > $CIRCLE_TEST_REPORTS/junit.xml
          when: always
      
      - store_test_results:
          path: /tmp/circle-reports

      - store_artifacts:
          path: /tmp/circle-artifacts

  go-test-windows:
    executor:
      name: win/vs2019
      shell: powershell.exe

    environment:
      GOPATH: C:\Users\VssAdministrator\go
      PACKAGE_PATH: gopkg.in\launchdarkly\go-server-sdk.v5

    steps:
      - checkout
      - run: go version
      - run:
          name: move source
          command: |
            go env GOPATH
            mkdir ${env:GOPATH}\src\${env:PACKAGE_PATH}
            mv * ${env:GOPATH}\src\${env:PACKAGE_PATH}\
      - run:
          name: setup DynamoDB
          command: |
            $ProgressPreference = "SilentlyContinue"  # prevents console errors from CircleCI host when we use iwr
            iwr -outf dynamo.zip https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.zip
            mkdir dynamo
            Expand-Archive -Path dynamo.zip -DestinationPath dynamo
            cd dynamo
            javaw -D"java.library.path=./DynamoDBLocal_lib" -jar DynamoDBLocal.jar
          background: true
      - run:
          name: setup Consul
          command: |
            $ProgressPreference = "SilentlyContinue"
            iwr -outf consul.zip https://releases.hashicorp.com/consul/1.4.2/consul_1.4.2_windows_amd64.zip
            mkdir consul
            Expand-Archive -Path consul.zip -DestinationPath consul
            cd consul
            sc.exe create "Consul" binPath="$(Get-Location)/consul.exe agent -dev"
            sc.exe start "Consul"
      - run:
          name: setup Redis
          command: |
            $ProgressPreference = "SilentlyContinue"
            iwr -outf redis.zip https://github.com/MicrosoftArchive/redis/releases/download/win-3.0.504/Redis-x64-3.0.504.zip
            mkdir redis
            Expand-Archive -Path redis.zip -DestinationPath redis
            cd redis
            ./redis-server --service-install
            ./redis-server --service-start
      - run:
          name: build and test
          command: |
            cd ${env:GOPATH}\src\${env:PACKAGE_PATH}
            go test -race ./...

  benchmarks:
    docker:
      - image: cimg/go:1.14
        environment:
          CIRCLE_ARTIFACTS: /tmp/circle-artifacts
          COMMON_GO_PACKAGES: >
            github.com/golang/dep/cmd/dep

    working_directory: ~/go/src/gopkg.in/launchdarkly/go-server-sdk.v5

    steps:
      - checkout
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: go build ./...      
      - run:
          name: Run benchmarks
          command: |
            mkdir -p $CIRCLE_ARTIFACTS
            make benchmarks | tee $CIRCLE_ARTIFACTS/benchmarks.txt

      - store_artifacts:
          path: /tmp/circle-artifacts
